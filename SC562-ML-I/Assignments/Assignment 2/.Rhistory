slope = 5
intercept = 10
f = function(x){
return (slope*x + intercept)
}
x = seq(-10,10,by = 2)
y = f(x) + rnorm(length(x),mean=0,sd=25)
plot(x,y)
x = seq(-10,10,by = 0.2)
y = f(x) + rnorm(length(x),mean=0,sd=25)
plot(x,y)
plot(x,y,pch=2)
plot(x,y,pch=16)
plot(x,y,pch=19)
plot(x,y,pch=20)
plot(x,y,pch=25)
plot(x,y,pch=30)
plot(x,y,pch=28)
plot(x,y,pch=26)
plot(x,y,pch=25)
plot(x,y,pch=19)
abline(slop,intercept,col = "blue",lwd = 2)
abline(slope,intercept,col = "blue",lwd = 2)
curve(f(x),add=T,col = "pink")
curve(f(x),add=T,col = "blue",lwd = 2)
x = seq(-10,10,by = 0.2)
y = f(x) + rnorm(length(x),mean=0,sd=25)
plot(x,y,pch=19)
curve(f(x),add=T,col = "blue",lwd = 2)
p_slop = (sum(x*y) - n*mean(x)*mean(y)) / (sum(x^2) - n*(mean(x))^2)
n = length(x)
y = f(x) + rnorm(n,mean=0,sd=25)
plot(x,y,pch=19)
curve(f(x),add=T,col = "blue",lwd = 2)
p_slop = (sum(x*y) - n*mean(x)*mean(y)) / (sum(x^2) - n*(mean(x))^2)
p_slope = (sum(x*y) - n*mean(x)*mean(y)) / (sum(x^2) - n*(mean(x))^2)
p_intercept = mean(y) - p_slope*mean(x)
predicted_f = function(x)
{
return (p_slope*x+p_intercept)
}
curve(predicted_f(x),add=T,lwd = 2,col = "red")
legend(
"topleft",
legend = c("Actual Line","Predicted Line"),
col = c("blue","red"),
lty = 1,
lwd =2
)
getwd()
auto = read.csv("D:/data-science/SC562-ML-I/ALL CSV FILES - 2nd Edition/Auto.csv")
View(auto)
Y = auto[,1]
Y
n = length(Y)
X = rep(1,n)
x = cbind(X,auto[,3:6])
View(X)
auto[,3:6]
x = cbind(X,auto[,3:6])
X
x = cbind(X,auto[,3:6])
X
for(i in 3:6)
{x = cbind(X,auto[,i])}
for(i in 3:6)
{X = cbind(X,auto[,i])}
C
X
X = rep(1,n)
X = cbind(X,auto[,3:6])
X
X_trans = t(X)
square_X = X_trans * X
X = cbind(X,auto[,3:6])
X
summary(X)
auto[auto == "?"] = NA
auto = na.omit(auto)
auto$horsepower = as.numeric(auto$horsepower)
Y = auto[,1]
n = length(Y)
X = rep(1,n)
X = cbind(X,auto[,3:6])
X_trans = t(X)
square_X = X_trans * X
beta_hat = square_X %*% X_trans %*% Y
beta_hat = solve(square_X) %*% X_trans %*% Y
X_trans = t(X)
square_X = X_trans * X
dim(square_X)
square_X = X_trans %*% X
beta_hat = solve(square_X) %*% X_trans %*% Y
auto = read.csv("D:/data-science/SC562-ML-I/ALL CSV FILES - 2nd Edition/Auto.csv")
auto[auto == "?"] = NA
auto = na.omit(auto)
auto$horsepower = as.numeric(auto$horsepower)
Y = auto[,1]
n = length(Y)
X = rep(1,n)
X = cbind(X,auto[,3:6])
X_trans = t(X)
square_X = X_trans %*% X
X_trans
summary(X)
X = as.matrix(X)
X_trans = t(X)
square_X = X_trans %*% X
beta_hat = solve(square_X) %*% X_trans %*% Y
beta_hat
